(()=>{"use strict";const t=function(){let t=[];const o=[];let n=[];const e=function(t,o){let n=!1;return t.forEach((t=>{t[0]==o[0]&&t[1]==o[1]&&(console.log("true"),n=!0)})),1==n};function s(t,o){for(let n=t.length;n--;)t[n][0]==o[0]&&t[n][1]==o[1]&&t.splice(n,1)}return{boardhorizontal:function(t,o,n){for(let e=0;e<t.shipLength;e++){let s=[o,e+n];t.coords.push(s)}},vertical:function(t,o,n){for(let e=0;e<t.shipLength;e++){let s=[e+o,n];t.coords.push(s)}},receiveAttack:function(t,c){e(t.coords,c)?(t.hit(),console.log("hit")):o.push(c),e(n,c)&&s(n,c)},missedCoords:o,currentShips:t,allSunk:function(){let o=[];return t.forEach((t=>{0==t.sunk?o.push(!1):o.push(!0)})),!o.includes(!1)},getPotentialMoves:function(){for(let t=0;t<10;t++)for(let o=0;o<10;o++)n.push([o,t])},potentialMoves:n,matchMove:e,removeAllInstances:s}}();(function(){const t="";return{swapPlayer:function(){t=""}}})().say();const o=function(t){let o=!1;return{shipLength:void 0,numberOfHits:0,isSunk:function(t,n){return t==n?(o=!0,o):(o=!1,o)},hit:function(){this.numberOfHits+=1},coords:[]}}();o.coords.push([0,1]),t.getPotentialMoves(),t.potentialMoves,console.log(t.potentialMoves.length),t.receiveAttack(o,[0,3]),console.log(t.potentialMoves.length)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,