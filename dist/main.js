(()=>{"use strict";(function(){let e=[];const t=[];let o=[],nconst c=function(e,t){let o=!1;return e.forEach((e=>{e[0]==t[0]&&e[1]==t[1]&&(console.log("true"),o=!0)})),1==o};function l(e,t){for(let o=e.length;o--;)e[o][0]==t[0]&&e[o][1]==t[1]&&e.splice(o,1)}return{board:n,horizontal:function(e,t,o){for(let n=0;n<e.shipLength;n++){let c=[t,n+o];e.coords.push(c)}},vertical:function(e,t,o){for(let n=0;n<e.shipLength;n++){let c=[n+t,o];e.coords.push(c)}},receiveAttack:function(e,n){c(e.coords,n)?(e.hit(),console.log("hit")):t.push(n),c(o,n)&&l(o,n)},missedCoords:t,currentShips:e,allSunk:function(){let t=[];return e.forEach((e=>{0==e.sunk?t.push(!1):t.push(!0)})),!t.includes(!1)},getPotentialMoves:function(){for(let e=0;e<10;e++)for(let t=0;t<10;t++)o.push([t,e])},potentialMoves:o,matchMove:c,removeAllInstances:l,drawBoard:function(){console.log("Hi");const e=document.getElementsByClassName("container")[0];console.log(e);let t=document.createElement("div");t.classList.add("board-container"),e.appendChild(t),n.forEach((e=>{e.forEach((e=>{let o=document.createElement("div");o.classList.add("individual-square"),t.appendChild(o),o.innerHTML=e}))}))}}})().drawBoard()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,