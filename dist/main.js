(()=>{"use strict";const o=function(o){let s=!1;return{shipLength:o,numberOfHits:0,isSunk:function(o,r){return o==r?(s=!0,s):(s=!1,s)},hit:function(){this.numberOfHits+=1},coords:[]}},s=function(){let o=[];const s=[];let r=[],tconst d=function(o,s){let r=!1;return o.forEach((o=>{o[0]==s[0]&&o[1]==s[1]&&(console.log("true"),r=!0)})),1==r};function c(o,s){for(let r=o.length;r--;)o[r][0]==s[0]&&o[r][1]==s[1]&&o.splice(r,1)}return{board:t,horizontal:function(o,s,r){for(let t=0;t<o.shipLength;t++){let d=[s,t+r];o.coords.push(d)}},vertical:function(o,s,r){for(let t=0;t<o.shipLength;t++){let d=[t+s,r];o.coords.push(d)}},receiveAttack:function(o,t){d(o.coords,t)?(o.hit(),console.log("hit")):s.push(t),d(r,t)&&c(r,t)},missedCoords:s,currentShips:o,allSunk:function(){let s=[];return o.forEach((o=>{0==o.sunk?s.push(!1):s.push(!0)})),!s.includes(!1)},getPotentialMoves:function(){for(let o=0;o<10;o++)for(let s=0;s<10;s++)r.push([s,o])},potentialMoves:r,matchMove:d,removeAllInstances:c,drawBoard:function(){console.log("Hi");const o=document.getElementsByClassName("container")[0];console.log(o);let s=document.createElement("div");s.classList.add("board-container"),o.appendChild(s),t.forEach((o=>{o.forEach((o=>{let r=document.createElement("div");r.classList.add("individual-square"),s.appendChild(r)," "!=o[0]&&(console.log("yes"),r.classList.add("ship"))}))}))}}},r=function(){let o=[],s=[];const r=function(o){let s=(r=o.potentialMoves.length-1,Math.floor(Math.random()*r));var r;return o.potentialMoves[s]};return{name:"",randomAttack:r,getLegalMoves:function(s){o=[];for(let r=0;r<s.board.length;r++)for(let t=0;t<10;t++)" "==s.board[r][t]&&o.push([r,t])},randomAttack:r,checkMissedCoordsForMatch:function(o,r){let t=!1;s=[];for(let d=0;d<r.length;d++)o[0]==r[d][0]&&o[1]==r[d][1]?t=!0:s.push([o[0],o[1]]);return 1==t}}},t=function(){let t="",d="",c=t,n=s(),e=s();return{swapPlayer:function(){c=c==t?d:t},setUpGame:function(){t=r();const s=o(2);s.coords.push([0,0]),s.coords.push([0,1]),n.board[0][0]=s,n.board[0][1]=s;const c=o(3);c.coords.push([1,0]),c.coords.push([1,1]),c.coords.push([1,2]),n.board[1][0]=s,n.board[1][1]=s,n.board[1][2]=s;const a=o(3);a.coords.push([2,0]),a.coords.push([2,1]),a.coords.push([2,2]),n.board[2][0]=a,n.board[2][1]=a,n.board[2][2]=a;const u=o(4);u.coords.push([3,0]),u.coords.push([3,1]),u.coords.push([3,2]),u.coords.push([3,3]),n.board[3][0]=u,n.board[3][1]=u,n.board[3][2]=u,n.board[3][3]=u;const h=o(5);h.coords.push([4,0]),h.coords.push([4,1]),h.coords.push([4,2]),h.coords.push([4,3]),h.coords.push([4,4]),n.board[4][0]=h,n.board[4][1]=h,n.board[4][2]=h,n.board[4][3]=h,n.board[4][4]=h,d=r();const p=o(2);p.coords.push([0,0]),p.coords.push([0,1]),e.board[0][0]=p,e.board[0][1]=p;const l=o(3);l.coords.push([1,0]),l.coords.push([1,1]),l.coords.push([1,2]),e.board[1][0]=l,e.board[1][1]=l,e.board[1][2]=l;const i=o(3);i.coords.push([2,0]),i.coords.push([2,1]),i.coords.push([2,2]),e.board[2][0]=i,e.board[2][1]=i,e.board[2][2]=i;const b=o(4);b.coords.push([3,0]),b.coords.push([3,1]),b.coords.push([3,2]),b.coords.push([3,3]),e.board[3][0]=b,e.board[3][1]=b,e.board[3][2]=b,e.board[3][3]=b;const f=o(5);f.coords.push([4,0]),f.coords.push([4,1]),f.coords.push([4,2]),f.coords.push([4,3]),f.coords.push([4,4]),e.board[4][0]=f,e.board[4][1]=f,e.board[4][2]=f,e.board[4][3]=f,e.board[4][4]=f},p1Gameboard:n,p2Gameboard:e}}();t.setUpGame(),t.p1Gameboard.drawBoard(),t.p2Gameboard.drawBoard()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,