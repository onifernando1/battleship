(()=>{"use strict";const o=function(){let o=[];const e=function(o,e){let l=!1;for(let s=0;s<e.length;s++)console.log(e[s][0]),console.log(e[s][1]),console.log(o[0]==e[s][0]),console.log(o[1]==e[s][1]),o[0]==e[s][0]&&o[1]==e[s][1]&&(l=!0);return 1==l?(console.log("IT IS A MATCH"),!0):(console.log("IT IS NOT A MATCH"),!1)};function l(o){return Math.floor(Math.random()*o)}const s=function(o){let s=l(10),n=l(10);console.log(o.missedCoords);let t=!1;for(t=e([s,n],o.missedCoords),console.log(`missedCoordsMatch ${t}`);1==t;)console.log("in while"),s=l(9),n=l(9),console.log(`while x y ${[s,n]}`),t=e([s,n],o.missedCoords);let c=[s,n];console.log(c)};return{name:"",randomAttack:s,getLegalMoves:function(e){o=[];for(let l=0;l<e.board.length;l++)for(let s=0;s<10;s++)" "==e.board[l][s]&&o.push([l,s])},randomAttack:s,checkMissedCoordsForMatch:e}}();console.log(o.checkMissedCoordsForMatch([0,0],[[0,1],[0,0]]))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,