(()=>{"use strict";const o=function(){let o=[];const t=[];let e=[];return{boardhorizontal:function(o,t,e){for(let n=0;n<o.shipLength;n++){let l=[t,n+e];o.coords.push(l)}},vertical:function(o,t,e){for(let n=0;n<o.shipLength;n++){let l=[n+t,e];o.coords.push(l)}},receiveAttack:function(o,n){!function(o,t){let e=!1;for(let n=0;n<o.length;n++)o[n].includes(t[0])&&o[n].includes(t[1])&&(e=!0);return e}(o.coords,n)?t.push(n):o.hit(),function(o,t){o.forEach((o=>o[0]==t[0]&&o[1]==t[1]))}(e,n)&&function(o,t){for(let e=o.length;e--;)o[e][0]==t[0]&&o[e][1]==t[1]&&o.splice(e,1)}(e,n)},missedCoords:t,currentShips:o,allSunk:function(){let t=[];return o.forEach((o=>{0==o.sunk?t.push(!1):t.push(!0)})),!t.includes(!1)},getPotentialMoves:function(){for(let o=0;o<10;o++)for(let t=0;t<10;t++)e.push([t,o])},potentialMoves:e}}(),t=function(){let o=[],t=[];const e=function(o){let t=(e=o.potentialMoves.length-1,Math.floor(Math.random()*e));var e;return console.log(t),o.potentialMoves[t]};return{name:"",randomAttack:e,getLegalMoves:function(t){o=[];for(let e=0;e<t.board.length;e++)for(let n=0;n<10;n++)" "==t.board[e][n]&&o.push([e,n])},randomAttack:e,checkMissedCoordsForMatch:function(o,e){let n=!1;t=[];for(let l=0;l<e.length;l++)console.log(e[l][0]),console.log(e[l][1]),console.log(o[0]==e[l][0]),console.log(o[1]==e[l][1]),o[0]==e[l][0]&&o[1]==e[l][1]?n=!0:t.push([o[0],o[1]]);return console.log(`available : ${t}`),1==n?(console.log("IT IS A MATCH"),!0):(console.log("IT IS NOT A MATCH"),!1)}}}();o.getPotentialMoves(),o.potentialMoves,o.getPotentialMoves(),console.log(t.randomAttack(o))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,