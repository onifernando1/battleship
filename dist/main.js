(()=>{"use strict";const o=function(o){let s=!1;return{shipLength:o,numberOfHits:0,isSunk:function(o,r){return o==r?(s=!0,s):(s=!1,s)},hit:function(){this.numberOfHits+=1},coords:[]}},s=function(){let o=[];const s=[];let r=[],tconst e=function(o,s){let r=!1;return o.forEach((o=>{o[0]==s[0]&&o[1]==s[1]&&(console.log("true"),r=!0)})),1==r};function d(o,s){for(let r=o.length;r--;)o[r][0]==s[0]&&o[r][1]==s[1]&&o.splice(r,1)}return{board:t,horizontal:function(o,s,r){for(let t=0;t<o.shipLength;t++){let e=[s,t+r];o.coords.push(e)}},vertical:function(o,s,r){for(let t=0;t<o.shipLength;t++){let e=[t+s,r];o.coords.push(e)}},receiveAttack:function(o,t){e(o.coords,t)?(o.hit(),console.log("hit")):s.push(t),e(r,t)&&d(r,t)},missedCoords:s,currentShips:o,allSunk:function(){let s=[];return o.forEach((o=>{0==o.sunk?s.push(!1):s.push(!0)})),!s.includes(!1)},getPotentialMoves:function(){for(let o=0;o<10;o++)for(let s=0;s<10;s++)r.push([s,o])},potentialMoves:r,matchMove:e,removeAllInstances:d,drawBoard:function(){console.log("Hi");const o=document.getElementsByClassName("container")[0];console.log(o);let s=document.createElement("div");s.classList.add("board-container"),o.appendChild(s);for(let o=0;o<t.length;o++)for(let r=0;r<t.length;r++){let e=document.createElement("div");e.classList.add("individual-square"),e.classList.add(r),e.classList.add(o),console.log("in"),s.appendChild(e)," "!=t[o][r]&&e.classList.add("ship")}},setUpClickToHit:function(){let o=document.getElementsByClassName("individual-square");for(let s=0;s<o.length;s++)o[s].addEventListener("click",(()=>{console.log("Attack")}))}}},r=function(){let o=[],s=[];const r=function(o){let s=(r=o.potentialMoves.length-1,Math.floor(Math.random()*r));var r;return o.potentialMoves[s]};return{name:"",randomAttack:r,getLegalMoves:function(s){o=[];for(let r=0;r<s.board.length;r++)for(let t=0;t<10;t++)" "==s.board[r][t]&&o.push([r,t])},randomAttack:r,checkMissedCoordsForMatch:function(o,r){let t=!1;s=[];for(let e=0;e<r.length;e++)o[0]==r[e][0]&&o[1]==r[e][1]?t=!0:s.push([o[0],o[1]]);return 1==t}}},t=function(){let t="",e="",d=t,n=s(),c=s();return{swapPlayer:function(){d=d==t?e:t},setUpGame:function(){t=r();const s=o(2);s.coords.push([0,0]),s.coords.push([0,1]),n.board[0][0]=s,n.board[0][1]=s;const d=o(3);d.coords.push([1,0]),d.coords.push([1,1]),d.coords.push([1,2]),n.board[1][0]=s,n.board[1][1]=s,n.board[1][2]=s;const a=o(3);a.coords.push([2,0]),a.coords.push([2,1]),a.coords.push([2,2]),n.board[2][0]=a,n.board[2][1]=a,n.board[2][2]=a;const u=o(4);u.coords.push([3,0]),u.coords.push([3,1]),u.coords.push([3,2]),u.coords.push([3,3]),n.board[3][0]=u,n.board[3][1]=u,n.board[3][2]=u,n.board[3][3]=u;const l=o(5);l.coords.push([4,0]),l.coords.push([4,1]),l.coords.push([4,2]),l.coords.push([4,3]),l.coords.push([4,4]),n.board[4][0]=l,n.board[4][1]=l,n.board[4][2]=l,n.board[4][3]=l,n.board[4][4]=l,e=r();const h=o(2);h.coords.push([0,0]),h.coords.push([0,1]),c.board[0][0]=h,c.board[0][1]=h;const i=o(3);i.coords.push([1,0]),i.coords.push([1,1]),i.coords.push([1,2]),c.board[1][0]=i,c.board[1][1]=i,c.board[1][2]=i;const p=o(3);p.coords.push([2,0]),p.coords.push([2,1]),p.coords.push([2,2]),c.board[2][0]=p,c.board[2][1]=p,c.board[2][2]=p;const b=o(4);b.coords.push([3,0]),b.coords.push([3,1]),b.coords.push([3,2]),b.coords.push([3,3]),c.board[3][0]=b,c.board[3][1]=b,c.board[3][2]=b,c.board[3][3]=b;const f=o(5);f.coords.push([4,0]),f.coords.push([4,1]),f.coords.push([4,2]),f.coords.push([4,3]),f.coords.push([4,4]),c.board[4][0]=f,c.board[4][1]=f,c.board[4][2]=f,c.board[4][3]=f,c.board[4][4]=f},p1Gameboard:n,p2Gameboard:c}}();t.setUpGame(),t.p1Gameboard.drawBoard(),t.p2Gameboard.drawBoard(),t.p1Gameboard.setUpClickToHit(),t.p1Gameboard.setUpClickToHit()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,